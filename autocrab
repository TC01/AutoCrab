#!/usr/bin/env python

import optparse
import os
import shutil
import sys

valid_commands = {	'create':'crab -create -submit -cfg ', 
					'status':'crab -status -get all -c ', 
					'resubmit':'crab -resubmit bad -c ', 
					'publish':'crab -publish -c '}

def isCrabDirectory(dir):
	"""Check if a directory is a working directory generated by crab."""
	isDirectory = True
	if not os.path.exists(os.path.join(dir, "job")):
		isDirectory = False
	if not os.path.exists(os.path.join(dir, "res")):
		isDirectory = False
	if not os.path.exists(os.path.join(dir, "log")):
		isDirectory = False
	if not os.path.exists(os.path.join(dir, "share")):
		isDirectory = False
	return isDirectory

def isCrabConfig(filename):
	# TODO: A better check here. (Look at the inside?)
	if ".cfg" in filename:
		return True
	return False

def doAutoCrab(command):
	crabline = valid_commands[command]

	# for now, use os.getcwd()
	for path, dirs, files in os.walk(os.getcwd()):
		if path != os.getcwd():
			continue

		for dir in dirs:
			# Check if the inside is set up like a crab file.
			if not isCrabDirectory(os.path.join(path, dir)):
				continue
			os.system(crabline + dir)

def main():
	parser = optparse.OptionParser()
	(opts, args) = parser.parse_args()

	for arg in args:
		if arg not in valid_commands.keys():
			print "Error: unrecognized autocrab command."
		else:
			doAutoCrab(arg)

if __name__ == '__main__':
	main()
