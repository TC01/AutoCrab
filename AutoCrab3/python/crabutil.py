"""
Utility functions for working with CRAB. Used by most
of the autocrab commands. Updated for CRAB3, mostly.
"""

import os

def getCrabConfig(dir):
	"""Retrieves backup copy of crab config file in directory."""
	path = os.path.join(dir, "share", "crab.cfg")
	return path

def getCrabLog(dir):
	path = os.path.join(dir, "log", "crab.log")
	return path

def isCrabDirectory(dir):
	"""Check if a directory is a working directory generated by crab."""
	isDirectory = True
	if not os.path.exists(os.path.join(dir, "inputs")):
		isDirectory = False
	if not os.path.exists(os.path.join(dir, "results")):
		isDirectory = False
	if not os.path.exists(os.path.join(dir, "inputs", "CMSSW_cfg.pkl")):
		isDirectory = False
	if not os.path.exists(os.path.join(dir, "inputs", "CMSSW_cfg.py")):
		isDirectory = False
	return isDirectory

def isCrabConfig(filename):
	"""Check if a file is a legal crab config file."""
	valid = False
	if ".py" in filename:
		valid = True

	configFile = open(filename)
	text = configFile.read()

	# Probably we should import the file and then check if there's a valid thing inside.
	# This would require some new code.
	# But for now, this test works... I think.
	if not 'config = Configuration()' in text:
		valid = False

	# Make sure we have the right blocks inside.
#	if not ("[CRAB]" in text and "[CMSSW]" in text and "[USER]" in text):
#		valid = False

	# Make sure we're not an autocrab template config file
	# Disabling this check for now because I'm not sure what that format will look like.
#	if "$INS_SHORTNAME" in text or "$INS_LONGNAME" in text:
#		valid = False	

	return valid
